#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

#include <windows.h>

#include <time.h>

#define DAY_OF_WEEK_SIZE 7

#define MAX_STACK

#define MALLOC(a,b) a = (menuPointer)malloc(b)

#define mainM 0


HANDLE COUT = 0;    // 콘솔 출력 장치
HANDLE CIN = 0;        // 콘솔 입력 장치

int event;        // 마우스 이벤트에 이용
int x;            // 마우스의 x좌표 저장소
int y;            // 마우스의 y좌표 저장소

typedef struct node *menuPointer;
typedef struct node {
	int pre_menu;
	menuPointer link;
}node;
menuPointer menu[MAX_STACK];

int top = -1;



int be_input();

int get_input(WORD *vkey, COORD *pos);

void gotoxy(int x, int y);      // 좌표 보내기 gotoxy





void title();  // 초기 메인 메뉴 함수

void timeset(); // 시계 함수





const static char* DAY_OF_WEEK[DAY_OF_WEEK_SIZE] = {

	" Sun ", " Mon ", " Tue ", " Wed ", " Thu ", " Fri ", " Sat "

}; //요일설정



void CursorView(char show)//커서숨기기

{

	HANDLE hConsole;

	CONSOLE_CURSOR_INFO ConsoleCursor;



	hConsole = GetStdHandle(STD_OUTPUT_HANDLE);



	ConsoleCursor.bVisible = show;

	ConsoleCursor.dwSize = 1;



	SetConsoleCursorInfo(hConsole, &ConsoleCursor);

}



void textcolor(int color_number)

{

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color_number);

} //텍스트 색 설정



void main()

{

	title();



}


///////////////////////////////// main END ///////////////////////////////////////




void title()
{

	CursorView(0);

	textcolor(11);

	system("mode con cols=50 lines=30"); //cols = 칸/행 (가로)  lines = 줄/열 (세로)

	printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤\n");

	printf("\n");

	printf("\n");

	printf("         ■                           ■          \n");

	printf("         □  빈 강의실 예약 프로그램  □          \n");

	printf("         ■                           ■          \n");

	printf("         □          IT5호관          □          \n");

	printf("         ■                           ■          \n");

	printf("\n");

	printf("\n");

	printf("\n");

	printf("               이름 : |              |	         \n");

	printf("               학번 : |              |	         \n");

	printf("                 키 : |              |           \n");

	printf("\n");

	printf("\n");

	printf("\n");

	printf("\n");

	printf("                                                  \n");

	printf(" KNU                                              \n");

	printf("▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤\n");

	DWORD mode;
	WORD key;
	COORD pos;

	CIN = GetStdHandle(STD_INPUT_HANDLE);
	COUT = GetStdHandle(STD_OUTPUT_HANDLE);

	// 마우스 활성화
	GetConsoleMode(CIN, &mode);
	SetConsoleMode(CIN, mode | ENABLE_MOUSE_INPUT);


	while (1) {

		

			if (be_input())
			{
				if (get_input(&key, &pos) != 0)
				{
					MOUSE_EVENT;
					x = pos.X;    // 마우스클릭값이 x,y변수에 저장되도록함
					y = pos.Y;
					gotoxy(x, y);
					printf("%d %d", x, y);

					




					
				}
			}
		

			COORD pos = { 0, 24 };

			SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);



		timeset(); //문제는 시간을 바꾸려면 시간을 표시하는 줄에 커서가 가 있어야 하는데 정보 입력은 우야노

	}


}



void timeset()
{


	time_t now = time(NULL);

	struct tm* time = localtime(&now);



	int year = time->tm_year + 1900;

	int month = time->tm_mon + 1;

	int dayOfMonth = time->tm_mday;

	int dayOfWeek = time->tm_wday;

	int hour = time->tm_hour;

	int minute = time->tm_min;

	int second = time->tm_sec;



	printf("%d-%d-%d [%s] %d:%d:%d\n", year, month, dayOfMonth, DAY_OF_WEEK[dayOfWeek], hour, minute, second);

}


int be_input()
{
	INPUT_RECORD input_record;
	DWORD input_count;

	PeekConsoleInput(CIN, &input_record, 1, &input_count);
	return input_count;
}

int get_input(WORD *vkey, COORD *pos)
{
	INPUT_RECORD input_record;
	DWORD input_count;

	ReadConsoleInput(CIN, &input_record, 1, &input_count);
	switch (input_record.EventType) {
	case MOUSE_EVENT:
		if (pos && (input_record.Event.MouseEvent.dwButtonState & FROM_LEFT_1ST_BUTTON_PRESSED)) {
			CONSOLE_SCREEN_BUFFER_INFO csbi;

			GetConsoleScreenBufferInfo(COUT, &csbi);

			*pos = input_record.Event.MouseEvent.dwMousePosition;
			pos->X -= csbi.srWindow.Left;
			pos->Y -= csbi.srWindow.Top;

			return MOUSE_EVENT;
		}
		break;

	}

	//    FlushConsoleInputBuffer(CIN);
	return 0;
}

void gotoxy(int x, int y)      // 좌표 보내기 gotoxy
{
	COORD Cur;
	Cur.X = x;
	Cur.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Cur);
}

